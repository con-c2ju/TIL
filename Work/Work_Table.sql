-- [운동부 테이블] --
-- 테이블 작성
-- TEAM: 팀아이디, 지역, 팀명, 개설날짜, 전화번호, 홈페이지
CREATE TABLE TEAM(
    TEAM_ID VARCHAR2(10) PRIMARY KEY,
    LOCATION_ID NUMBER,
    TEAM_NAME VARCHAR2(20), -- 예약어(쓰면 파란 볼드체 되는거)를 컬럼명으로 지정해도 되지만, SIZE란 예약어는 안먹힘
    START_DATE DATE,
    CALL_NUM VARCHAR2(20),
    HPAGE VARCHAR2(20)
);

-- PLAYER: 선수번호, 선수명, 등록일, 포지션, 키, 팀아이디
CREATE TABLE PLAYER(
    PLAYER_ID VARCHAR2(10),
    PLAYER_NAME VARCHAR2(20),
    AGN_DATE DATE,
    POS_TYPE VARCHAR2(20),
    HEIGHT NUMBER,
    TEAM_ID VARCHAR2(10),
    CONSTRAINT PLAYER_FK FOREIGN KEY (TEAM_ID)
    REFERENCES TEAM(TEAM_ID)    -- ALTER 써서 따로 넣는것도 가능
);

-- 데이터 입력
--TEAM
INSERT INTO TEAM(TEAM_ID, LOCATION_ID, TEAM_NAME, START_DATE, CALL_NUM, HPAGE)
VALUES('10', 110, '이글스', '06/12/13', '02-1234-5678', 'www.eagles.com');

INSERT INTO TEAM(TEAM_ID, LOCATION_ID, TEAM_NAME, START_DATE, CALL_NUM, HPAGE)
VALUES('20', 120, '베어스', '12/3/11', '010-3333-7777', 'www.bears.com');

-- PLAYER
-- 이글스
INSERT INTO PLAYER(PLAYER_ID, PLAYER_NAME, AGN_DATE, POS_TYPE, HEIGHT, TEAM_ID)
VALUES('E1', '김철수', '06/12/13', 'Right', 176, '10');
INSERT INTO PLAYER(PLAYER_ID, PLAYER_NAME, AGN_DATE, POS_TYPE, HEIGHT, TEAM_ID)
VALUES('E2', '김영희', '07/2/23', 'Left', 185, '10');
INSERT INTO PLAYER(PLAYER_ID, PLAYER_NAME, AGN_DATE, POS_TYPE, HEIGHT, TEAM_ID)
VALUES('E3', '김미애', '10/1/10', 'Middle', 190, '10');

-- 베어스
INSERT INTO PLAYER(PLAYER_ID, PLAYER_NAME, AGN_DATE, POS_TYPE, HEIGHT, TEAM_ID)
VALUES('B1', '김두치', '12/3/12', 'Right', 184, '20');
INSERT INTO PLAYER(PLAYER_ID, PLAYER_NAME, AGN_DATE, POS_TYPE, HEIGHT, TEAM_ID)
VALUES('B2', '김철이', '13/8/30', 'Left', 172, '20');
INSERT INTO PLAYER(PLAYER_ID, PLAYER_NAME, AGN_DATE, POS_TYPE, HEIGHT, TEAM_ID)
VALUES('B3', '김영수', '15/4/20', 'Middle', 175, '20');

-- JOIN
SELECT p.player_name, t.team_name, t.call_num, t.hpage
    FROM TEAM t, PLAYER p
    WHERE t.team_id = p.team_id;
    
    
-- [온라인 마켓 테이블] --
CREATE TABLE PRODUCT(
    NUM_P NUMBER,
    NAME_P VARCHAR2(20),
    PRICE NUMBER,
    MEMO VARCHAR2(30),
    CONSTRAINT PRODUCT_PK PRIMARY KEY(NUM_P)
);

CREATE TABLE CONSUMER(
    ID_C VARCHAR2(20),
    NAME_C VARCHAR2(20),
    AGE NUMBER,
    CONSTRAINT CONSUMER_PK PRIMARY KEY(ID_C)
);

CREATE TABLE CART(
    NUM_CA NUMBER,
    ID_C VARCHAR2(20),
    NUM_P NUMBER,
    STOCK NUMBER,
    CONSTRAINT CART_FK1 FOREIGN KEY(ID_C)
    REFERENCES CONSUMER(ID_C),
    CONSTRAINT CART_FK2 FOREIGN KEY(NUM_P)
    REFERENCES PRODUCT(NUM_P)
);

-- 데이터 입력
-- PRODUCT
INSERT INTO PRODUCT(NUM_P, NAME_P, PRICE)
VALUES(100038, '주방세제', 2300);
INSERT INTO PRODUCT(NUM_P, NAME_P, PRICE, MEMO)
VALUES(97841, '냉동만두', 7900, '1+1 행사');
INSERT INTO PRODUCT(NUM_P, NAME_P, PRICE, MEMO)
VALUES(88765, '샐러드볼(大)', 9000, '10%할인');
INSERT INTO PRODUCT(NUM_P, NAME_P, PRICE, MEMO)
VALUES(3320, '수건', 5300, '10%할인');
INSERT INTO PRODUCT(NUM_P, NAME_P, PRICE)
VALUES(100012, '락스', 4000);

-- CONSUMER
INSERT INTO CONSUMER(ID_C, NAME_C, AGE)
VALUES('abc1234', '김미영', 34);
INSERT INTO CONSUMER(ID_C, NAME_C, AGE)
VALUES('efg5678', '김하나', 24);

-- CART
INSERT INTO CART(NUM_CA, ID_C, NUM_P, STOCK)
VALUES(10, 'abc1234', 100038, 1);
INSERT INTO CART(NUM_CA, ID_C, NUM_P, STOCK)
VALUES(10, 'abc1234', 97841, 2);
INSERT INTO CART(NUM_CA, ID_C, NUM_P, STOCK)
VALUES(20, 'efg5678', 3320, 3);
INSERT INTO CART(NUM_CA, ID_C, NUM_P, STOCK)
VALUES(20, 'efg5678', 88765, 1);

-- 데이터 출력
SELECT c.name_c, p.name_p, p.price, ca.stock
    FROM PRODUCT p, CONSUMER c, CART ca
    WHERE p.num_p = ca.num_p
        AND c.id_C = ca.id_C
        AND ca.id_c = 'abc1234';